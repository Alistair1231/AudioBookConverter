pr: none

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - version.txt
      - README.md


variables:
#  APP_VERSION: '5.4.$(Build.BuildNumber)'
  VERSION: 6.3
  BUILD_COUNTER: $[counter(variables['VERSION'], 0)]
  APP_VERSION: '$(VERSION).$(BUILD_COUNTER)'

jobs:
- job: Build_All

  strategy:
    matrix:
      linux:
        imageName: 'ubuntu-latest'
      windows:
        imageName: 'windows-latest'

  pool:
    vmImage: $(imageName)

  steps:
    - checkout: self
      clean: 'true'
      fetchDepth: '1'
      persistCredentials: true

    - task: replacetokens@3
      inputs:
        targetFiles: 'pom.xml,src/main/java/uk/yermak/audiobookconverter/Version.java,build/windows/chocolaty/audiobookconverter.nuspec,build/windows/chocolaty/tools/chocolateyinstall.ps1'
        tokenPrefix: '#{'
        tokenSuffix: '}#'

    - bash: |
        wget -q https://download.java.net/openjdk/jdk21/ri/openjdk-21+35_linux-x64_bin.tar.gz
        tar -xzf openjdk-21+35_linux-x64_bin.tar.gz
        export JAVA_HOME=jdk-21
        export JAVAFX_JMODS=jmods/linux
        mvn clean package --no-transfer-progress

        build/linux/package.sh $JAVA_HOME $JAVAFX_JMODS $(APP_VERSION)

      condition: eq( variables['Agent.OS'], 'Linux' )
      displayName: 'Build deb package'


    - script: |
        ECHO ON
        choco install 7zip --no-progress
        choco install wget --no-progress
        wget -q https://download.java.net/openjdk/jdk21/ri/openjdk-21+35_windows-x64_bin.zip
        7z.exe x openjdk-21+35_windows-x64_bin.zip
        setx JAVA_HOME jdk-21
        call refreshenv
        SET JAVAFX_JMODS=jmods/windows

        call mvn clean package --no-transfer-progress

        call build/windows/package.bat "%JAVA_HOME%" %JAVAFX_JMODS% $(APP_VERSION)

      condition: eq( variables['Agent.OS'], 'Windows_NT' )
      displayName: 'Build MSI installers'


    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'target/release'
        ArtifactName: 'AudioBookConverter-$(APP_VERSION)'
        publishLocation: 'Container'

- job: Release_GitHub
  dependsOn:
    - 'Build_All'
  pool:
    vmImage: 'ubuntu-latest'

  steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: 'AudioBookConverter-$(APP_VERSION)'
    
    - task: GitHubRelease@0
      inputs:
        gitHubConnection: 'github.com_yermak'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create' # Options: create, edit, delete
        target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
        tagSource: 'manual' # Required when action == Create# Options: auto, manual
        title: 'Release $(APP_VERSION)'
        tag: 'version_$(APP_VERSION)'
        #releaseNotesSource: 'file' # Optional. Options: file, input
        #releaseNotesFile: # Optional
        #releaseNotes: # Optional
        assets: '$(Pipeline.Workspace)/*' # Optional

- job: BuildAndRelease
  displayName: 'Build and Release to Chocolatey'
  dependsOn:
    - 'Release_GitHub'
  pool:
    vmImage: 'windows-latest'

  steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: 'AudioBookConverter-$(APP_VERSION)'
        targetPath: '$(Pipeline.Workspace)'
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'specific'
        downloadPath: '$(System.ArtifactsDirectory)'

    - powershell: |
        dir '$(Pipeline.Workspace)'
        dir '$(System.ArtifactsDirectory)'
        $checksum = Get-FileHash -Path $(Pipeline.Workspace)/AudioBookConverter-NoDeps-$(APP_VERSION).msi -Algorithm SHA256 | Select-Object -ExpandProperty Hash
        Write-Host "##vso[task.setvariable variable=binary_checksum]$checksum"
      displayName: 'Generate Checksum'

    - powershell: |
        (Get-Content build\windows\chocolaty\tools\chocolateyinstall.ps1) -replace '##yourbinarychecksum##', '$(binary_checksum)' | Set-Content build\windows\chocolaty\tools\chocolateyInstall.ps1
      displayName: 'Update chocolateyInstall.ps1 with Checksum'

    - script: |
        choco pack audiobookconverter.nuspec
      displayName: 'Create Chocolatey Package'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/*.nupkg'
        artifactName: 'drop'
        publishLocation: 'Container'

    - script: |
        choco push $(Build.ArtifactStagingDirectory)/*.nupkg --source https://push.chocolatey.org/ --api-key $(CHOCOLATEY_API_KEY)
        displayName: 'Push Package to Chocolatey'
      env:
        CHOCOLATEY_API_KEY: $(CHOCOLATEY_API_KEY)
      